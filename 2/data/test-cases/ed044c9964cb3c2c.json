{
  "uid" : "ed044c9964cb3c2c",
  "name" : "test_min_window_substring[input_array4-fafe]",
  "fullName" : "src.test.java.challenges.medium.MinWindowSubstring.test_min_window_substring#test_min_window_substring",
  "historyId" : "b40e035a69a70c9e07da3e401a83ff75",
  "time" : {
    "start" : 1618611582955,
    "stop" : 1618611582956,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'fafe' == 'afe'\n  - afe\n  + fafe\n  ? +",
  "statusTrace" : "input_array = ['aaffsfsfasfasfasfasfasfacasfafe', 'fafe']\nexpected_result = 'fafe'\n\n    @pytest.mark.parametrize(\"input_array,expected_result\", test_data)\n    def test_min_window_substring(input_array: List[str], expected_result: str):\n>       assert expected_result == MinWindowSubstring(input_array)\nE       AssertionError: assert 'fafe' == 'afe'\nE         - afe\nE         + fafe\nE         ? +\n\nsrc/test/java/challenges/medium/MinWindowSubstring/test_min_window_substring.py:22: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.medium.MinWindowSubstring"
  }, {
    "name" : "suite",
    "value" : "test_min_window_substring"
  }, {
    "name" : "host",
    "value" : "fv-az190-8"
  }, {
    "name" : "thread",
    "value" : "3127-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.medium.MinWindowSubstring.test_min_window_substring"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_result",
    "value" : "'fafe'"
  }, {
    "name" : "input_array",
    "value" : "['aaffsfsfasfasfasfasfasfacasfafe', 'fafe']"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ed044c9964cb3c2c.json",
  "parameterValues" : [ "'fafe'", "['aaffsfsfasfasfasfasfasfacasfafe', 'fafe']" ]
}